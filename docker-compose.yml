version: '3.8'
services:
    app:
        container_name: nestjs_api_mongodb_sample_dev
        image: nestjs_api_mongodb_sample_dev:1.0.14
        build:
            context: .
            target: development
            dockerfile: Dockerfile
        env_file: .env
        ports:
            - "7000:7000"
        volumes:
            - .:/app
        restart: unless-stopped
        depends_on:
            - mongo1
            - mongo2
        environment:
            - MONGO_USERNAME=$MONGO_USERNAME
            - MONGO_PASSWORD=$MONGO_PASSWORD
            - MONGO_HOSTNAME=mongo1
            - MONGO_PORT=$MONGO_PORT
            - MONGO_DB=$MONGO_DB
        networks:
            - app-network
    prod:
        container_name: nestjs_api_mongodb_sample_prod
        image: nestjs_api_mongodb_sample_prod:1.0.14
        build:
            context: .
            target: production
            dockerfile: Dockerfile
        env_file: .env
        ports:
            - "7000:7000"
        volumes:
            - .:/app
        restart: unless-stopped
        depends_on:
            - mongo1
            - mongo2
        environment:
            - MONGO_USERNAME=$MONGO_USERNAME
            - MONGO_PASSWORD=$MONGO_PASSWORD
            - MONGO_HOSTNAME=mongo1
            - MONGO_PORT=$MONGO_PORT
            - MONGO_DB=$MONGO_DB
        networks:
            - app-network
    
    mongo1:
        image: mongo:latest
        restart: unless-stopped
        container_name: mongo1
        env_file: .env
        environment:
          - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
          - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
        command: --port 27021
        ports:
          - 27024:27021
        expose:
          - "27021"
        entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all"]  
        volumes:
          - mongodata1:/data/db
          - ./rs-init.sh:/scripts/rs-init.sh
        networks:
          - app-network
    mongo2:
        image: mongo:latest
        restart: unless-stopped
        container_name: mongo2
        env_file: .env
        environment:
          - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
          - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
        command: --port 27021
        ports:
          - 27023:27021
        expose:
          - "27021"
        entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all"]  
        volumes:
          - mongodata2:/data/db
        networks:
          - app-network

volumes:
    mongodata1:
    mongodata2:

networks:
  app-network:
    driver: bridge